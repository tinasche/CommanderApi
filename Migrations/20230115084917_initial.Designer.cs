// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using VersedApi.Data;

#nullable disable

namespace VersedApi.Migrations
{
    [DbContext(typeof(CommandsContext))]
    [Migration("20230115084917_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("VersedApi.Models.Command", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CommandString")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("commandString");

                    b.Property<DateOnly>("CreatedOn")
                        .HasColumnType("date")
                        .HasColumnName("createdOn");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Platform")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("platform");

                    b.HasKey("Id")
                        .HasName("pK_commands");

                    b.ToTable("commands", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CommandString = "dotnet watch run",
                            CreatedOn = new DateOnly(2023, 1, 15),
                            Description = "executes dotnet with 'watch' parameter for file changes and reload",
                            Platform = "dotnet"
                        },
                        new
                        {
                            Id = 2,
                            CommandString = "dotnet build",
                            CreatedOn = new DateOnly(2023, 1, 15),
                            Description = "build the current project/solution",
                            Platform = "dotnet"
                        },
                        new
                        {
                            Id = 3,
                            CommandString = "npm init vue@latest",
                            CreatedOn = new DateOnly(2023, 1, 15),
                            Description = "start a new vue project",
                            Platform = "vuejs"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
